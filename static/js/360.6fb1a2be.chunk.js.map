{"version":3,"file":"static/js/360.6fb1a2be.chunk.js","mappings":"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","sources":["webpack://cryptocurrency/./src/components/PopUpCoinDescription/PopUpCoinDescription.module.css?773f","webpack://cryptocurrency/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.tsx","components/PopUpCoinDescription/PopUpCoinDescription.tsx","webpack://cryptocurrency/./src/pages/Profile/Profile.module.css?aa45","pages/Profile/Profile.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PopUpCoinDescription_container__Jaazf\",\"cardWrap\":\"PopUpCoinDescription_cardWrap__AeEAa\",\"rank\":\"PopUpCoinDescription_rank__NQEWc\",\"symbol\":\"PopUpCoinDescription_symbol__EuaRQ\",\"price\":\"PopUpCoinDescription_price__U8Gfm\",\"titleWrap\":\"PopUpCoinDescription_titleWrap__q89gw\",\"flexWrap\":\"PopUpCoinDescription_flexWrap__lNLzw\",\"formInternalContainer\":\"PopUpCoinDescription_formInternalContainer__c1-pE\",\"totalPriceWrap\":\"PopUpCoinDescription_totalPriceWrap__IXuEg\",\"totalPriceTitle\":\"PopUpCoinDescription_totalPriceTitle__Z+J81\",\"totalPrice\":\"PopUpCoinDescription_totalPrice__AmfqU\",\"changePercent\":\"PopUpCoinDescription_changePercent__xTbte\",\"internalTitle\":\"PopUpCoinDescription_internalTitle__kzzUx\",\"supply\":\"PopUpCoinDescription_supply__j09A4\",\"alignLeft\":\"PopUpCoinDescription_alignLeft__Robgy\",\"chartWrap\":\"PopUpCoinDescription_chartWrap__Dr0vq\",\"btnWrap\":\"PopUpCoinDescription_btnWrap__33Z+a\",\"twoBtnsWrap\":\"PopUpCoinDescription_twoBtnsWrap__DzZuC\",\"btn\":\"PopUpCoinDescription_btn__cQv+l\",\"smallBtn\":\"PopUpCoinDescription_smallBtn__dtDOg\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerInputNumber\":\"FormsControls_containerInputNumber__S7Qe3\",\"minus\":\"FormsControls_minus__LV4XC\",\"plus\":\"FormsControls_plus__VwMu0\",\"inputNumber\":\"FormsControls_inputNumber__tb1Do\",\"btn\":\"FormsControls_btn__JtcvU\",\"btnRed\":\"FormsControls_btnRed__TI6-p\",\"btnGreen\":\"FormsControls_btnGreen__3jJdQ\"};","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {InputNumberSchema} from \"../../utils/Validators/Validators\";\r\nimport classes from './FormsControls.module.css'\r\nimport classNames from \"classnames\";\r\n\r\ntype PropsTypeInputNumber = {\r\n    name: string,\r\n    setValue: (value: any) => void,\r\n    value: any,\r\n    increment: () => void,\r\n    decrement: () => void,\r\n    placeholder: string\r\n}\r\n\r\ntype PropsTypeButton = {\r\n    type: \"button\" | \"reset\" | \"submit\" | undefined,\r\n    text: string,\r\n    redColor? : boolean,\r\n    onClick?: (args: any) => void\r\n    onClickValue? : any\r\n}\r\n\r\nexport const InputNumber:React.FC<PropsTypeInputNumber> = ({name,setValue, value, increment, decrement, placeholder}) => {\r\n\r\n    return <div className={classes.containerInputNumber}>\r\n        <div className={classes.minus} onClick={decrement}><p>-</p></div>\r\n        <input className={classes.inputNumber}\r\n               name={name}\r\n               value={value}\r\n               onChange={setValue}\r\n               type=\"text\"\r\n               pattern=\"^[0-9]+(.[0-9]+)?$\"\r\n               placeholder={placeholder}\r\n               required/>\r\n        <div className={classes.plus} onClick={increment}><p>+</p></div>\r\n    </div>\r\n}\r\n\r\nexport const Button: React.FC<PropsTypeButton> = ({type,\r\n                                                      text,\r\n                                                      redColor,\r\n                                                      onClick,\r\n                                                      onClickValue}) => {\r\n\r\n    return <div>\r\n        <button type={type}\r\n                onClick={() => onClick ? onClick(onClickValue ? onClickValue : null) : null}\r\n                className={classNames(classes.btn, redColor ? classes.btnRed : classes.btnGreen)}\r\n        >{text}</button>\r\n    </div>\r\n}\r\n","import React, {FormEvent, useEffect, useState} from \"react\"\r\nimport classes from './PopUpCoinDescription.module.css'\r\nimport {AssetsType} from \"../../api/types-api\";\r\nimport {formatPercents, formatPrice} from \"../CoinElement/CoinElement\";\r\nimport classNames from \"classnames\";\r\nimport {Button, InputNumber} from \"../common/FormsControls/FormsControls\";\r\nimport {FavouriteType} from \"../Assets/Assets\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfile} from \"../../selectors/profile-selectors\";\r\nimport {addCoinToPortfolio, CoinInPortfolioType, removeCoinFromPortfolio} from \"../../redux/profile-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype PropsTypes = {\r\n    coin: AssetsType,\r\n    setIsPopUpActive: (b: boolean) => void\r\n    isAlreadyExistCoin: boolean,\r\n    needRedirect?: boolean\r\n}\r\n\r\nconst PopUpCoinDescription: React.FC<PropsTypes> = ({\r\n                                                        coin,\r\n                                                        setIsPopUpActive,\r\n                                                        isAlreadyExistCoin,\r\n                                                        needRedirect\r\n                                                    }) => {\r\n\r\n    const [quantityCoin, setQuantityCoin] = useState<number>(0)\r\n    const [totalPrice, setTotalPrice] = useState<string>('0')\r\n    const portfolio = useSelector(getProfile).portfolio\r\n    const idx = portfolio.findIndex(existing => existing.coin.id === coin.id)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeTotalPrice = (quantity: number) => {\r\n        const tP: number = coin.priceUsd * quantity\r\n        const maxValue = Math.pow(10, 12)\r\n        if (tP > maxValue) {\r\n            setTotalPrice(String(maxValue - 1))\r\n        } else {\r\n            setTotalPrice(String(tP))\r\n        }\r\n    }\r\n\r\n    const deleteCoinFromPortfolio = () => {\r\n\r\n        if (quantityCoin <= 0) {\r\n            return\r\n        }\r\n\r\n        setIsPopUpActive(false)\r\n\r\n        dispatch(removeCoinFromPortfolio(coin, quantityCoin))\r\n\r\n        setQuantityCoin(0)\r\n        setTotalPrice('0')\r\n    }\r\n\r\n    const appendPortfolio = () => {\r\n        if (quantityCoin <= 0) {\r\n            return\r\n        }\r\n        dispatch(addCoinToPortfolio(coin, quantityCoin))\r\n        setQuantityCoin(0)\r\n        setTotalPrice('0')\r\n        setIsPopUpActive(false)\r\n    }\r\n\r\n    const convertQuantity = (quantity: number) => {\r\n        const max = Math.pow(10, 9)\r\n        return quantity > max ? max - 1 : quantity\r\n    }\r\n\r\n    const incrementQuantityCoin = () => {\r\n        const incr = +quantityCoin + 1\r\n        changeTotalPrice(incr)\r\n        setQuantityCoin(incr)\r\n    }\r\n\r\n    const decrementQuantityCoin = () => {\r\n        if (+quantityCoin > 0) {\r\n            const decr = +quantityCoin - 1\r\n            changeTotalPrice(decr)\r\n            setQuantityCoin(decr)\r\n        }\r\n    }\r\n\r\n    const showQuantity = () => {\r\n        return portfolio[idx] ? `${formatPercents(convertQuantity(portfolio[idx].quantity), 8)} ${portfolio[idx].coin.symbol}` : ''\r\n    }\r\n\r\n    const showLittlePrice = () => {\r\n        if (portfolio[idx]) {\r\n            let price = portfolio[idx].coin.priceUsd\r\n            const max = Math.pow(10, 12)\r\n            return max <= price ? max - 1 : price\r\n        }\r\n        return 0\r\n    }\r\n\r\n    const handleChange = (event: any) => {\r\n        const quantity = event.target.value\r\n        changeTotalPrice(quantity)\r\n        setQuantityCoin(quantity)\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n        <div className={classes.cardWrap}>\r\n            <div className={classes.titleWrap}>\r\n                <span className={classes.symbol}>\r\n                    {needRedirect\r\n                        ?\r\n                        <Link to={`/${coin.id}`}>{coin.symbol}</Link>\r\n                        :\r\n                        coin.symbol\r\n                    }\r\n\r\n                </span>\r\n                <span className={classes.rank}>RANK #{coin.rank}</span>\r\n                <span className={classes.price}>{formatPrice(coin.priceUsd)}</span>\r\n            </div>\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>24h%:</p>\r\n                <span className={classes.supply}>{formatPercents(coin.changePercent24Hr)}%</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Circulating Supply:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.supply, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Market cap:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.marketCapUsd, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Volume(24h):</p>\r\n                <span className={classes.supply}>{formatPrice(coin.volumeUsd24Hr, 0)}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={classes.formInternalContainer}>\r\n\r\n            <InputNumber name=\"quantitySigns\"\r\n                         value={quantityCoin}\r\n                         increment={incrementQuantityCoin}\r\n                         decrement={decrementQuantityCoin}\r\n                         setValue={handleChange}\r\n                         placeholder={coin.symbol}/>\r\n\r\n            <div className={classes.totalPriceWrap}>\r\n                <p className={classes.totalPriceTitle}>Total:</p>\r\n                <p className={classes.totalPrice}>{formatPrice(+totalPrice, 2)}\r\n                </p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        {isAlreadyExistCoin ?\r\n            <div className={classes.totalPriceWrap}>\r\n                <p className={classes.totalPriceTitle}>Own:</p>\r\n                <p className={classes.totalPrice}>\r\n                    {formatPrice(showLittlePrice(), 2)} ({showQuantity()})\r\n                </p>\r\n            </div>\r\n            : null\r\n        }\r\n        <div className={classNames(classes.btnWrap, isAlreadyExistCoin ? classes.twoBtnsWrap : null)}>\r\n            <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n                <Button type={\"button\"} redColor={false} onClick={appendPortfolio}\r\n                        text={isAlreadyExistCoin ? \"BUY\" : \"ADD TO PORTFOLIO\"}/>\r\n            </div>\r\n            {isAlreadyExistCoin ?\r\n                <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n                    <Button type={\"button\"} text={\"SELL\"} onClick={deleteCoinFromPortfolio} redColor={true}/>\r\n                </div> :\r\n                null}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default PopUpCoinDescription","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__4N22R\",\"delete\":\"Profile_delete__vp+Xf\",\"deleteItem\":\"Profile_deleteItem__9fzXn\",\"descriptionWrap\":\"Profile_descriptionWrap__F9ACY\",\"balanceWrap\":\"Profile_balanceWrap__+xcG9\",\"balanceText\":\"Profile_balanceText__vHmdZ\",\"wrapDescription\":\"Profile_wrapDescription__Zhc4Z\"};","import React, {useEffect} from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport {initializeProfile, ProfileType} from \"../../redux/profile-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getInitializedProfile, getProfile} from \"../../selectors/profile-selectors\";\r\nimport Preloader from \"../../components/common/Preloader/Preloader\";\r\nimport PopUpCoinDescription from \"../../components/PopUpCoinDescription/PopUpCoinDescription\";\r\nimport {Link} from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport {formatPercents, formatPrice} from \"../../components/CoinElement/CoinElement\";\r\n\r\ntype PropsTypes = {}\r\n\r\nconst Profile: React.FC = ({}) => {\r\n\r\n    const isInitialized = useSelector(getInitializedProfile)\r\n    const profile = useSelector(getProfile)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isInitialized) {\r\n            dispatch(initializeProfile())\r\n        }\r\n\r\n    }, [isInitialized])\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n\r\n        <div className={classes.balanceWrap}>\r\n            <p className={classes.balanceText}>\r\n                Balance:\r\n            </p>\r\n            <span className={classes.balance}>\r\n                    {profile.balanceUsd > 0 ?\r\n                        formatPrice(profile.balanceUsd) :\r\n                        formatPrice(profile.initialBalance)}</span>\r\n        </div>\r\n\r\n        {!profile.portfolio.length ?\r\n            <div className={classes.titleWrap}>\r\n                <h1>Your portfolio is empty</h1>\r\n                <h2><Link to='/coins/:page=1'>ADD CRYPTOCURRENCY</Link></h2>\r\n            </div> :\r\n            profile.portfolio.map(coin => <div key={coin.coin.id} className={classes.wrapDescription}>\r\n\r\n                    <div  className={classes.descriptionWrap}>\r\n                        <PopUpCoinDescription coin={coin.coin}\r\n                                              setIsPopUpActive={() => {\r\n                                              }}\r\n                                              isAlreadyExistCoin={true}\r\n                                              needRedirect={true}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Profile","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"names":["InputNumber","name","setValue","value","increment","decrement","placeholder","className","classes","onClick","onChange","type","pattern","required","Button","text","redColor","onClickValue","classNames","coin","setIsPopUpActive","isAlreadyExistCoin","needRedirect","useState","quantityCoin","setQuantityCoin","totalPrice","setTotalPrice","portfolio","useSelector","getProfile","idx","findIndex","existing","id","dispatch","useDispatch","changeTotalPrice","quantity","tP","priceUsd","maxValue","Math","pow","String","to","symbol","rank","formatPrice","formatPercents","changePercent24Hr","supply","marketCapUsd","volumeUsd24Hr","incr","decr","event","target","price","max","showLittlePrice","convertQuantity","addCoinToPortfolio","removeCoinFromPortfolio","obj","TypeError","isInitialized","getInitializedProfile","profile","useEffect","initializeProfile","balanceUsd","initialBalance","length","map","PopUpCoinDescription","Preloader"],"sourceRoot":""}