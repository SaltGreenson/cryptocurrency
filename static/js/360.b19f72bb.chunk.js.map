{"version":3,"file":"static/js/360.b19f72bb.chunk.js","mappings":"4KACA,EAA4B,wCAA5B,EAA+E,uCAA/E,EAA6H,mCAA7H,EAAyK,qCAAzK,EAAsN,oCAAtN,EAAsQ,wCAAtQ,EAAyT,uCAAzT,EAAwX,oDAAxX,EAA6b,6CAA7b,EAA4f,8CAA5f,EAAujB,yCAAvjB,EAA4qB,4CAA5qB,EAAiuB,qCAAjuB,EAAw3B,sCAAx3B,EAA46B,0CAA56B,EAA49B,kCAA59B,EAAygC,uC,6BCAzgC,EAAuC,4CAAvC,EAA2F,6BAA3F,EAA+H,4BAA/H,EAAyK,mCAAzK,EAAkN,2BAAlN,EAAsP,8BAAtP,EAA+R,gC,SCsBlRA,EAA6C,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,KAAKC,EAAwD,EAAxDA,SAAUC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAEpG,OAAO,iBAAKC,UAAWC,EAAhB,WACH,gBAAKD,UAAWC,EAAeC,QAASJ,EAAxC,UAAmD,gCACnD,kBAAOE,UAAWC,EACXP,KAAMA,EACNE,MAAOA,EACPO,SAAUR,EACVS,KAAK,OACLC,QAAQ,qBACRN,YAAaA,EACbO,UAAQ,KACf,gBAAKN,UAAWC,EAAcC,QAASL,EAAvC,UAAkD,iCAEzD,EAEYU,EAAoC,SAAC,GAIuB,IAJtBH,EAIqB,EAJrBA,KACGI,EAGkB,EAHlBA,KACAC,EAEkB,EAFlBA,SACAP,EACkB,EADlBA,QACAQ,EAAkB,EAAlBA,aAElD,OAAO,0BACH,mBAAQN,KAAMA,EACNF,QAAS,kBAAMA,EAAUA,EAAQQ,GAA8B,MAAQ,IAA9D,EACTV,UAAWW,IAAWV,EAAaQ,EAAWR,EAAiBA,GAFvE,SAGEO,KAET,E,oCCgID,EAhKmD,SAAC,GAKO,IAJHI,EAIE,EAJFA,KACAC,EAGE,EAHFA,iBACAC,EAEE,EAFFA,mBACAC,EACE,EADFA,aAGpD,GAAwCC,EAAAA,EAAAA,UAAiB,KAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAiB,KAArD,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAAYF,UACpCG,EAAMH,EAAUI,WAAU,SAAAC,GAAQ,OAAIA,EAASd,KAAKe,KAAOf,EAAKe,EAA9B,IAElCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,SAACC,GACtB,IAAMC,EAAapB,EAAKqB,UAAYF,EAC9BG,EAAWC,KAAKC,IAAI,GAAI,IAE1BhB,EAAciB,OADdL,EAAKE,EACgBA,EAAW,EAEXF,GAE5B,EAgBKM,EAAkB,YACfrB,GAAgB,IAGrBW,GAASW,EAAAA,EAAAA,IAAmB3B,GAAOK,IACnCC,EAAgB,KAChBE,EAAc,KACdP,GAAiB,GACpB,EAoCD,OAAO,iBAAKb,UAAWC,EAAhB,WACH,iBAAKD,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,iBAAMD,UAAWC,EAAjB,SACKc,GAEG,SAAC,KAAD,CAAMyB,GAAE,WAAM5B,EAAKe,IAAnB,SAA0Bf,EAAK6B,SAE/B7B,EAAK6B,UAIb,kBAAMzC,UAAWC,EAAjB,mBAAsCW,EAAK8B,SAC3C,iBAAM1C,UAAWC,EAAjB,UAAiC0C,EAAAA,EAAAA,IAAY/B,EAAKqB,gBAEtD,iBAAKjC,UAAWC,EAAhB,WACI,cAAGD,UAAWW,IAAWV,EAAuBA,GAAhD,oBACA,kBAAMD,UAAWC,EAAjB,WAAkC2C,EAAAA,EAAAA,IAAehC,EAAKiC,mBAAtD,WAGJ,iBAAK7C,UAAWC,EAAhB,WACI,cAAGD,UAAWW,IAAWV,EAAuBA,GAAhD,kCACA,iBAAMD,UAAWC,EAAjB,UAAkC0C,EAAAA,EAAAA,IAAY/B,EAAKkC,OAAQ,GAAI,SAGnE,iBAAK9C,UAAWC,EAAhB,WACI,cAAGD,UAAWW,IAAWV,EAAuBA,GAAhD,0BACA,iBAAMD,UAAWC,EAAjB,UAAkC0C,EAAAA,EAAAA,IAAY/B,EAAKmC,aAAc,GAAI,SAGzE,iBAAK/C,UAAWC,EAAhB,WACI,cAAGD,UAAWW,IAAWV,EAAuBA,GAAhD,2BACA,iBAAMD,UAAWC,EAAjB,UAAkC0C,EAAAA,EAAAA,IAAY/B,EAAKoC,cAAe,GAAI,YAG9E,kBAAMC,SAxCW,SAACC,GAClBA,EAAMC,iBACNb,GACH,EAqCG,WAEI,iBAAKtC,UAAWC,EAAhB,WAEI,SAACR,EAAD,CAAaC,KAAK,gBACLE,MAAOqB,EACPpB,UAtEK,WAC1B,IAAMuD,GAAQnC,EAAe,EAC7Ba,EAAiBsB,GACjBlC,EAAgBmB,OAAOe,GAC1B,EAmEwBtD,UAjEK,WAC1B,IAAKmB,EAAe,EAAG,CACnB,IAAMoC,GAAQpC,EAAe,EAC7Ba,EAAiBuB,GACjBnC,EAAgBmB,OAAOgB,GAC1B,CACJ,EA4DwB1D,SAtDJ,SAACuD,GAClB,IAAMnB,EAAWmB,EAAMI,OAAO1D,MAC9BsB,EAAgBa,GAChBD,GAAkBC,EACrB,EAmDwBhC,YAAaa,EAAK6B,UAE/B,iBAAKzC,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,qBACA,cAAGD,UAAWC,EAAd,UAAmC0C,EAAAA,EAAAA,KAAaxB,EAAY,GAAI,WAMvEL,GACG,iBAAKd,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,mBACA,cAAGD,UAAWC,EAAd,SAvELoB,EAAUG,GAAV,WAAoBoB,EAAAA,EAAAA,IApBP,SAACb,GACrB,IAAMwB,EAAMpB,KAAKC,IAAI,GAAI,GACzB,OAAOL,EAAWwB,EAAMA,EAAM,EAAIxB,CACrC,CAiB6CyB,CAAgBnC,EAAUG,GAAKO,UAAW,GAA7E,YAAmFV,EAAUG,GAAKZ,KAAK6B,QAAW,QA2E/G,MAEN,iBAAKzC,UAAWW,IAAWV,EAAiBa,EAAqBb,EAAsB,MAAvF,WACI,gBAAKD,UAAWW,IAAWG,EAAqBb,EAAmBA,GAAnE,UACI,SAACM,EAAD,CAAQH,KAAM,SAAUK,UAAU,EAAOP,QAASoC,EAC1C9B,KAAMM,EAAqB,MAAQ,uBAE9CA,GACG,gBAAKd,UAAWW,IAAWG,EAAqBb,EAAmBA,GAAnE,UACI,SAACM,EAAD,CAAQH,KAAM,SAAUI,KAAM,OAAQN,QAhI1B,YAEvBe,GAAgB,IAIrBJ,GAAiB,GAEjBe,GAAS6B,EAAAA,EAAAA,IAAwB7C,GAAOK,IAExCC,EAAgB,KAChBE,EAAc,KACjB,EAoH2FX,UAAU,MAEtF,aAInB,C,+FChLD,GAAgB,UAAY,2BAA2B,OAAS,wBAAwB,WAAa,4BAA4B,gBAAkB,iCAAiC,YAAc,6BAA6B,kBAAoB,mCAAmC,kBAAoB,mCAAmC,SAAW,0BAA0B,YAAc,6BAA6B,gBAAkB,kC,kHC6F/a,EA/EsC,SAAC,ICfxB,SAAmCiD,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,+BACvC,CDa+C,IAE3C,IAAMC,GAAgBtC,EAAAA,EAAAA,IAAYuC,EAAAA,GAC5BC,GAAUxC,EAAAA,EAAAA,IAAYC,EAAAA,GACtBK,GAAWC,EAAAA,EAAAA,OAEjBkC,EAAAA,EAAAA,YAAU,WACNC,GAAYC,EAAAA,EAAAA,GAAkBH,GACjC,GAAE,CAACA,IAEJ,OAAgC9C,EAAAA,EAAAA,WAAiBiD,EAAAA,EAAAA,GAAkBH,IAAnE,eAAOI,EAAP,KAAiBF,EAAjB,KAUA,OARAD,EAAAA,EAAAA,YAAU,WAEDH,GACDhC,GAASuC,EAAAA,EAAAA,MAGhB,GAAE,CAACP,IAECA,GAIE,iBAAK5D,UAAWC,EAAAA,UAAhB,WAEH,iBAAKD,UAAWC,EAAAA,YAAhB,WACI,cAAGD,UAAWC,EAAAA,YAAd,uBAGA,iBAAMD,UAAWC,EAAAA,QAAjB,UAAmC0C,EAAAA,EAAAA,IAAYmB,EAAQM,gBAAiB,SAG3EN,EAAQzC,UAAUgD,QACf,iBAAKrE,UAAWC,EAAAA,kBAAhB,WACI,cAAGD,UAAWC,EAAAA,kBAAd,gCAGA,iBAAMD,UAAWC,EAAAA,cAAjB,UAAyC0C,EAAAA,EAAAA,IAAYmB,EAAQQ,WAAY,OAGzE,gBAAKtE,UAAWW,IAAwB,IAAbuD,EACvBK,EAAAA,EAAAA,oBAEAL,EAAW,EACPK,EAAAA,EAAAA,sBACAA,EAAAA,EAAAA,oBAAqCtE,EAAAA,UAL7C,UAMI,eAAGD,UAAwB,IAAbkE,EACVK,EAAAA,EAAAA,gBAEAL,EAAW,EACPK,EAAAA,EAAAA,kBACAA,EAAAA,EAAAA,gBALR,WAK0C3B,EAAAA,EAAAA,KAAgBsB,GAL1D,YAQC,KAEXJ,EAAQzC,UAAUgD,OAKhBP,EAAQzC,UAAUmD,KAAI,SAAA5D,GAAI,OAAI,gBAAwBZ,UAAWC,EAAAA,gBAAnC,UAEtB,gBAAMD,UAAWC,EAAAA,gBAAjB,UACI,SAACwE,EAAA,EAAD,CAAsB7D,KAAMA,EAAKA,KACXC,iBAAkB,WACjB,EACDC,oBAAoB,EACpBC,cAAc,OAPRH,EAAKA,KAAKe,GAAxB,KAJ1B,iBAAK3B,UAAWC,EAAAA,UAAhB,WACI,qDACA,yBAAI,SAAC,KAAD,CAAMuC,GAAG,iBAAT,yCAvCL,SAACkC,EAAA,EAAD,GAwDd,C","sources":["webpack://cryptocurrency/./src/components/PopUpCoinDescription/PopUpCoinDescription.module.css?773f","webpack://cryptocurrency/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.tsx","components/PopUpCoinDescription/PopUpCoinDescription.tsx","webpack://cryptocurrency/./src/pages/Profile/Profile.module.css?aa45","pages/Profile/Profile.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PopUpCoinDescription_container__8c2s6\",\"cardWrap\":\"PopUpCoinDescription_cardWrap__ylrvy\",\"rank\":\"PopUpCoinDescription_rank__Ljj65\",\"symbol\":\"PopUpCoinDescription_symbol__6Onrc\",\"price\":\"PopUpCoinDescription_price__ep5QB\",\"titleWrap\":\"PopUpCoinDescription_titleWrap__HZ+eq\",\"flexWrap\":\"PopUpCoinDescription_flexWrap__Ztlk-\",\"formInternalContainer\":\"PopUpCoinDescription_formInternalContainer__JLU4z\",\"totalPriceWrap\":\"PopUpCoinDescription_totalPriceWrap__B-48+\",\"totalPriceTitle\":\"PopUpCoinDescription_totalPriceTitle__80hOM\",\"totalPrice\":\"PopUpCoinDescription_totalPrice__7IvIB\",\"changePercent\":\"PopUpCoinDescription_changePercent__J6tc2\",\"internalTitle\":\"PopUpCoinDescription_internalTitle__9To4g\",\"supply\":\"PopUpCoinDescription_supply__66ntH\",\"alignLeft\":\"PopUpCoinDescription_alignLeft__o5oMX\",\"chartWrap\":\"PopUpCoinDescription_chartWrap__JwBPp\",\"btnWrap\":\"PopUpCoinDescription_btnWrap__QMvvy\",\"twoBtnsWrap\":\"PopUpCoinDescription_twoBtnsWrap__i2buf\",\"btn\":\"PopUpCoinDescription_btn__QELwU\",\"smallBtn\":\"PopUpCoinDescription_smallBtn__pKgEu\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerInputNumber\":\"FormsControls_containerInputNumber__Pcyiu\",\"minus\":\"FormsControls_minus__A-TPu\",\"plus\":\"FormsControls_plus__1AMmh\",\"inputNumber\":\"FormsControls_inputNumber__hMkWH\",\"btn\":\"FormsControls_btn__QAN0S\",\"btnRed\":\"FormsControls_btnRed__9Fxpy\",\"btnGreen\":\"FormsControls_btnGreen__7OJzX\"};","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {InputNumberSchema} from \"../../utils/Validators/Validators\";\r\nimport classes from './FormsControls.module.css'\r\nimport classNames from \"classnames\";\r\n\r\ntype PropsTypeInputNumber = {\r\n    name: string,\r\n    setValue: (value: any) => void,\r\n    value: any,\r\n    increment: () => void,\r\n    decrement: () => void,\r\n    placeholder: string\r\n}\r\n\r\ntype PropsTypeButton = {\r\n    type: \"button\" | \"reset\" | \"submit\" | undefined,\r\n    text: string,\r\n    redColor? : boolean,\r\n    onClick?: (args: any) => void\r\n    onClickValue? : any\r\n}\r\n\r\nexport const InputNumber:React.FC<PropsTypeInputNumber> = ({name,setValue, value, increment, decrement, placeholder}) => {\r\n\r\n    return <div className={classes.containerInputNumber}>\r\n        <div className={classes.minus} onClick={decrement}><p>-</p></div>\r\n        <input className={classes.inputNumber}\r\n               name={name}\r\n               value={value}\r\n               onChange={setValue}\r\n               type=\"text\"\r\n               pattern=\"^[0-9]+(.[0-9]+)?$\"\r\n               placeholder={placeholder}\r\n               required/>\r\n        <div className={classes.plus} onClick={increment}><p>+</p></div>\r\n    </div>\r\n}\r\n\r\nexport const Button: React.FC<PropsTypeButton> = ({type,\r\n                                                      text,\r\n                                                      redColor,\r\n                                                      onClick,\r\n                                                      onClickValue}) => {\r\n\r\n    return <div>\r\n        <button type={type}\r\n                onClick={() => onClick ? onClick(onClickValue ? onClickValue : null) : null}\r\n                className={classNames(classes.btn, redColor ? classes.btnRed : classes.btnGreen)}\r\n        >{text}</button>\r\n    </div>\r\n}\r\n","import React, {FormEvent, useEffect, useRef, useState} from \"react\"\r\nimport classes from './PopUpCoinDescription.module.css'\r\nimport {AssetsType} from \"../../api/types-api\";\r\nimport {formatPercents, formatPrice} from \"../CoinElement/CoinElement\";\r\nimport classNames from \"classnames\";\r\nimport {Button, InputNumber} from \"../common/FormsControls/FormsControls\";\r\nimport {FavouriteType} from \"../Assets/Assets\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfile} from \"../../selectors/profile-selectors\";\r\nimport {addCoinToPortfolio, CoinInPortfolioType, removeCoinFromPortfolio} from \"../../redux/profile-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype PropsTypes = {\r\n    coin: AssetsType,\r\n    setIsPopUpActive: (b: boolean) => void\r\n    isAlreadyExistCoin: boolean,\r\n    needRedirect?: boolean\r\n}\r\n\r\nconst PopUpCoinDescription: React.FC<PropsTypes> = ({\r\n                                                        coin,\r\n                                                        setIsPopUpActive,\r\n                                                        isAlreadyExistCoin,\r\n                                                        needRedirect\r\n                                                    }) => {\r\n\r\n    const [quantityCoin, setQuantityCoin] = useState<string>('0')\r\n    const [totalPrice, setTotalPrice] = useState<string>('0')\r\n    const portfolio = useSelector(getProfile).portfolio\r\n    const idx = portfolio.findIndex(existing => existing.coin.id === coin.id)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeTotalPrice = (quantity: number) => {\r\n        const tP: number = coin.priceUsd * +quantity\r\n        const maxValue = Math.pow(10, 12)\r\n        if (tP > maxValue) {\r\n            setTotalPrice(String(maxValue - 1))\r\n        } else {\r\n            setTotalPrice(String(tP))\r\n        }\r\n    }\r\n\r\n    const deleteCoinFromPortfolio = () => {\r\n\r\n        if (+quantityCoin <= 0) {\r\n            return\r\n        }\r\n\r\n        setIsPopUpActive(false)\r\n\r\n        dispatch(removeCoinFromPortfolio(coin, +quantityCoin))\r\n\r\n        setQuantityCoin('0')\r\n        setTotalPrice('0')\r\n    }\r\n\r\n    const appendPortfolio = () => {\r\n        if (+quantityCoin <= 0) {\r\n            return\r\n        }\r\n        dispatch(addCoinToPortfolio(coin, +quantityCoin))\r\n        setQuantityCoin('0')\r\n        setTotalPrice('0')\r\n        setIsPopUpActive(false)\r\n    }\r\n\r\n    const convertQuantity = (quantity: number) => {\r\n        const max = Math.pow(10, 9)\r\n        return quantity > max ? max - 1 : quantity\r\n    }\r\n\r\n    const incrementQuantityCoin = () => {\r\n        const incr = +quantityCoin + 1\r\n        changeTotalPrice(incr)\r\n        setQuantityCoin(String(incr))\r\n    }\r\n\r\n    const decrementQuantityCoin = () => {\r\n        if (+quantityCoin > 0) {\r\n            const decr = +quantityCoin - 1\r\n            changeTotalPrice(decr)\r\n            setQuantityCoin(String(decr))\r\n        }\r\n    }\r\n\r\n    const showQuantity = () => {\r\n        return portfolio[idx] ? `${formatPercents(convertQuantity(portfolio[idx].quantity), 8)} ${portfolio[idx].coin.symbol}` : ''\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const quantity = event.target.value\r\n        setQuantityCoin(quantity)\r\n        changeTotalPrice(+quantity)\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        appendPortfolio()\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n        <div className={classes.cardWrap}>\r\n            <div className={classes.titleWrap}>\r\n                <span className={classes.symbol}>\r\n                    {needRedirect\r\n                        ?\r\n                        <Link to={`/${coin.id}`}>{coin.symbol}</Link>\r\n                        :\r\n                        coin.symbol\r\n                    }\r\n\r\n                </span>\r\n                <span className={classes.rank}>RANK #{coin.rank}</span>\r\n                <span className={classes.price}>{formatPrice(coin.priceUsd)}</span>\r\n            </div>\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>24h%:</p>\r\n                <span className={classes.supply}>{formatPercents(coin.changePercent24Hr)}%</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Circulating Supply:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.supply, 12, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Market cap:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.marketCapUsd, 12, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Volume(24h):</p>\r\n                <span className={classes.supply}>{formatPrice(coin.volumeUsd24Hr, 12, 0)}</span>\r\n            </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div className={classes.formInternalContainer}>\r\n\r\n                <InputNumber name=\"quantitySigns\"\r\n                             value={quantityCoin}\r\n                             increment={incrementQuantityCoin}\r\n                             decrement={decrementQuantityCoin}\r\n                             setValue={handleChange}\r\n                             placeholder={coin.symbol}/>\r\n\r\n                <div className={classes.totalPriceWrap}>\r\n                    <p className={classes.totalPriceTitle}>Total:</p>\r\n                    <p className={classes.totalPrice}>{formatPrice(+totalPrice, 10, 2)}\r\n                    </p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {isAlreadyExistCoin ?\r\n                <div className={classes.totalPriceWrap}>\r\n                    <p className={classes.totalPriceTitle}>Own:</p>\r\n                    <p className={classes.totalPrice}>\r\n                        {showQuantity()}\r\n                    </p>\r\n                </div>\r\n                : null\r\n            }\r\n            <div className={classNames(classes.btnWrap, isAlreadyExistCoin ? classes.twoBtnsWrap : null)}>\r\n                <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n                    <Button type={\"submit\"} redColor={false} onClick={appendPortfolio}\r\n                            text={isAlreadyExistCoin ? \"BUY\" : \"ADD TO PORTFOLIO\"}/>\r\n                </div>\r\n                {isAlreadyExistCoin ?\r\n                    <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n                        <Button type={\"submit\"} text={\"SELL\"} onClick={deleteCoinFromPortfolio} redColor={true}/>\r\n                    </div> :\r\n                    null}\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default PopUpCoinDescription","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__+gefu\",\"delete\":\"Profile_delete__igZJQ\",\"deleteItem\":\"Profile_deleteItem__pXR7k\",\"descriptionWrap\":\"Profile_descriptionWrap__PZbLf\",\"balanceWrap\":\"Profile_balanceWrap__Ez9T8\",\"cryptoBalanceWrap\":\"Profile_cryptoBalanceWrap__qPFjg\",\"cryptoBalanceText\":\"Profile_cryptoBalanceText__q7ED4\",\"percents\":\"Profile_percents__PPeDd\",\"balanceText\":\"Profile_balanceText__v6zjH\",\"wrapDescription\":\"Profile_wrapDescription__kiqxM\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport {initializeProfile} from \"../../redux/profile-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getInitializedProfile, getProfile} from \"../../selectors/profile-selectors\";\r\nimport Preloader from \"../../components/common/Preloader/Preloader\";\r\nimport PopUpCoinDescription from \"../../components/PopUpCoinDescription/PopUpCoinDescription\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {formatPercents, formatPrice} from \"../../components/CoinElement/CoinElement\";\r\nimport {calculatePercents} from \"../../components/Header/Header\";\r\nimport percentsClasses from '../../components/Header/Header.module.css'\r\nimport classNames from \"classnames\";\r\n\r\ntype PropsTypes = {}\r\n\r\nconst Profile: React.FC<PropsTypes> = ({}) => {\r\n\r\n    const isInitialized = useSelector(getInitializedProfile)\r\n    const profile = useSelector(getProfile)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setPercents(calculatePercents(profile))\r\n    }, [profile])\r\n\r\n    const [percents, setPercents] = useState<number>(calculatePercents(profile))\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isInitialized) {\r\n            dispatch(initializeProfile())\r\n        }\r\n\r\n    }, [isInitialized])\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n\r\n        <div className={classes.balanceWrap}>\r\n            <p className={classes.balanceText}>\r\n                Balance:\r\n            </p>\r\n            <span className={classes.balance}>{formatPrice(profile.residualBalance, 14)}</span>\r\n        </div>\r\n\r\n        {profile.portfolio.length ?\r\n            <div className={classes.cryptoBalanceWrap}>\r\n                <p className={classes.cryptoBalanceText}>\r\n                    Cryptocurrencies:\r\n                </p>\r\n                <span className={classes.cryptoBalance}>{formatPrice(profile.balanceUsd, 15)}</span>\r\n\r\n\r\n                <div className={classNames(percents === 0 ?\r\n                    percentsClasses.neutralPercentsWrap :\r\n\r\n                    percents > 0 ?\r\n                        percentsClasses.increasedPercentsWrap :\r\n                        percentsClasses.reducedPercentsWrap, classes.percents)}>\r\n                    <p className={percents === 0 ?\r\n                        percentsClasses.neutralPercents :\r\n\r\n                        percents > 0 ?\r\n                            percentsClasses.increasedPercents :\r\n                            percentsClasses.reducedPercents}>{formatPercents(+percents)}%</p>\r\n                </div>\r\n\r\n            </div> : null\r\n        }\r\n        {!profile.portfolio.length ?\r\n            <div className={classes.titleWrap}>\r\n                <h1>Your portfolio is empty</h1>\r\n                <h2><Link to='/coins/:page=1'>ADD CRYPTOCURRENCY</Link></h2>\r\n            </div> :\r\n            profile.portfolio.map(coin => <div key={coin.coin.id} className={classes.wrapDescription}>\r\n\r\n                    <div  className={classes.descriptionWrap}>\r\n                        <PopUpCoinDescription coin={coin.coin}\r\n                                              setIsPopUpActive={() => {\r\n                                              }}\r\n                                              isAlreadyExistCoin={true}\r\n                                              needRedirect={true}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Profile","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}"],"names":["InputNumber","name","setValue","value","increment","decrement","placeholder","className","classes","onClick","onChange","type","pattern","required","Button","text","redColor","onClickValue","classNames","coin","setIsPopUpActive","isAlreadyExistCoin","needRedirect","useState","quantityCoin","setQuantityCoin","totalPrice","setTotalPrice","portfolio","useSelector","getProfile","idx","findIndex","existing","id","dispatch","useDispatch","changeTotalPrice","quantity","tP","priceUsd","maxValue","Math","pow","String","appendPortfolio","addCoinToPortfolio","to","symbol","rank","formatPrice","formatPercents","changePercent24Hr","supply","marketCapUsd","volumeUsd24Hr","onSubmit","event","preventDefault","incr","decr","target","max","convertQuantity","removeCoinFromPortfolio","obj","TypeError","isInitialized","getInitializedProfile","profile","useEffect","setPercents","calculatePercents","percents","initializeProfile","residualBalance","length","balanceUsd","percentsClasses","map","PopUpCoinDescription","Preloader"],"sourceRoot":""}