{"version":3,"file":"static/js/436.a4b8ffc1.chunk.js","mappings":"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","sources":["webpack://cryptocurrency/./src/components/Assets/Assets.module.css?3b1c","components/Assets/Assets.tsx","webpack://cryptocurrency/./src/components/ChartComponent/ChartComponent.module.css?6581","components/ChartComponent/ChartComponent.tsx","webpack://cryptocurrency/./src/components/PopUpCoinDescription/PopUpCoinDescription.module.css?773f","webpack://cryptocurrency/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.tsx","components/common/PopUp/PopUpYesNo.tsx","components/PopUpCoinDescription/PopUpCoinDescription.tsx","webpack://cryptocurrency/./src/components/common/LittlePreloader/LittlePreloader.module.css?276f","components/common/LittlePreloader/LittlePreloader.tsx","components/common/PopUp/PopUp.tsx","webpack://cryptocurrency/./src/pages/Main/Main.module.css?fe6f","webpack://cryptocurrency/./src/components/Card/Card.module.css?4f06","components/Card/Card.tsx","webpack://cryptocurrency/./src/components/Paginator/Paginator.module.css?d053","components/Paginator/Paginator.tsx","pages/Main/Main.tsx","selectors/assets-selectors.ts","webpack://cryptocurrency/./src/components/common/PopUp/PopUp.module.css?326a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tableWrap\":\"Assets_tableWrap__XNJuD\",\"container\":\"Assets_container__dTtcH\",\"theadStyle\":\"Assets_theadStyle__UYdVa\"};","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAssets, getTop3Assets} from \"../../selectors/assets-selectors\";\r\nimport {CoinElement} from \"../CoinElement/CoinElement\";\r\nimport classes from './Assets.module.css'\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport {getCurrentPage, getLastRank, getLimit} from \"../../selectors/app-selectors\";\r\nimport {setAssets} from \"../../redux/assets-reducer\";\r\nimport {Params, useNavigate, useParams} from \"react-router-dom\";\r\nimport {setAppCurrentPage} from \"../../redux/app-reducer\";\r\nimport Card from \"../Card/Card\";\r\nimport {AssetsType} from \"../../api/types-api\";\r\nimport PopUp from \"../common/PopUp/PopUp\";\r\nimport PopUpCoinDescription from \"../PopUpCoinDescription/PopUpCoinDescription\";\r\nimport {keys} from \"../../keys\";\r\nimport PopUpYesNo from \"../common/PopUp/PopUpYesNo\";\r\nimport {getProfile} from \"../../selectors/profile-selectors\";\r\n\r\nexport const getValueFromParams = (params: string) => {\r\n    return params.split('=')[1]\r\n}\r\n\r\nexport type FavouriteType = {\r\n    coin: AssetsType,\r\n    quantity: number,\r\n    totalPrice: number\r\n}\r\n\r\nexport const Assets: React.FC = () => {\r\n\r\n\r\n    const portfolio = useSelector(getProfile).portfolio\r\n    const assets = useSelector(getAssets)\r\n    const limit = useSelector(getLimit)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const dispatch = useDispatch()\r\n\r\n    const params: Readonly<Params<string>> = useParams()\r\n    const page: number = +getValueFromParams(params.page as string)\r\n\r\n    const state = JSON.parse(localStorage.getItem(keys.localStorageName) as string)\r\n    const [favourites, setFavourites] = useState<Array<FavouriteType>>(state ? state : [])\r\n\r\n    const [isPopUpActive, setIsPopUpActive] = useState(false)\r\n    const [selectedCoin, setSelectedCoin] = useState<AssetsType>({} as AssetsType)\r\n    const [isAlreadyExistCoin, setIsAlreadyExistCoin] = useState<boolean>(false)\r\n    const [pageFromParams, setPageFromParams] = useState<number>(page ? page : 1)\r\n\r\n\r\n    const alreadyInFavourite = (coinId: string) => {\r\n        return portfolio.some(f => f.coin.id === coinId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keys.localStorageName, JSON.stringify(favourites))\r\n    }, [favourites])\r\n\r\n    useEffect(() => {\r\n        if (pageFromParams && pageFromParams === +pageFromParams) {\r\n            if (pageFromParams !== currentPage) {\r\n                dispatch(setAppCurrentPage(pageFromParams))\r\n                dispatch(setAssets(pageFromParams * limit - limit, limit))\r\n            }\r\n        }\r\n    }, [pageFromParams])\r\n\r\n    return <div className={classes.container}>\r\n        <div className={classes.tableWrap}>\r\n            <table>\r\n                <thead className={classes.theadStyle}>\r\n                <tr className={classes.headerTable}>\r\n\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Price</th>\r\n                    <th>24h%</th>\r\n                    <th>Circulating Supply</th>\r\n                    <th>Market cap</th>\r\n                    <th>Volume(24h)</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {assets.map((coin) => <CoinElement key={coin.id}\r\n                                                   setIsPopUpActive={setIsPopUpActive}\r\n                                                   setIsAlreadyExistCoin={setIsAlreadyExistCoin}\r\n                                                   setSelectedCoin={setSelectedCoin}\r\n                                                   coin={coin}\r\n                                                   alreadyInFavourite={alreadyInFavourite}/>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <PopUp active={isPopUpActive} setActive={setIsPopUpActive}>\r\n            <PopUpCoinDescription coin={selectedCoin}\r\n                                  isAlreadyExistCoin={isAlreadyExistCoin}\r\n                                  setIsPopUpActive={setIsPopUpActive}\r\n            />\r\n        </PopUp>\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"chartWrap\":\"ChartComponent_chartWrap__Mg9z2\"};","import React, {useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Chart from 'chart.js/auto';\r\nimport {LinearScale, LineController, LineElement, PointElement, Title} from 'chart.js'\r\nimport {getIsFetching} from \"../../selectors/app-selectors\";\r\nimport {getAssetsHistory} from \"../../selectors/assets-selectors\";\r\nimport {setAssetByID, setAssetsHistoryById} from \"../../redux/assets-reducer\";\r\nimport {IntervalEnum} from \"../../api/assets-api\";\r\nimport LittlePreloader from \"../common/LittlePreloader/LittlePreloader\";\r\nimport classes from './ChartComponent.module.css'\r\nimport {AssetsHistoryType} from \"../../api/types-api\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const formatDate = (date: Date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit'\r\n    }).format(date)\r\n}\r\n\r\ninterface PropsTypes {\r\n    assetHistory: Array<AssetsHistoryType>,\r\n    id: string,\r\n    borderColor?: '#4fc180' | string,\r\n    borderWidth?: 1 | number\r\n    isDisplayX: boolean,\r\n    isDisplayY: boolean\r\n}\r\n\r\nconst ChartComponent: React.FC<PropsTypes> = ({\r\n                                                  assetHistory,\r\n                                                  id,\r\n                                                  borderWidth,\r\n                                                  isDisplayX,\r\n                                                  isDisplayY,\r\n                                                  borderColor = '#4fc180'\r\n                                              }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        Chart.register(LineController, LineElement, PointElement, LinearScale, Title);\r\n\r\n        const chartExist = Chart.getChart(id)\r\n\r\n        if (chartExist !== undefined) {\r\n            chartExist.destroy()\r\n        }\r\n\r\n        new Chart(id, {\r\n            type: \"line\",\r\n            data: {\r\n                labels: assetHistory.map(a => formatDate(a.time)),\r\n                datasets: [\r\n                    {\r\n                        label: \"Price\",\r\n                        data: assetHistory.map(a => a.priceUsd),\r\n                        borderColor: borderColor,\r\n                        borderWidth: borderWidth\r\n                    },\r\n                ],\r\n            },\r\n            options: {\r\n                responsive: false,\r\n                plugins: {\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        display: isDisplayX,\r\n                        grid: {\r\n                            display: false\r\n                        }\r\n                    },\r\n                    y: {\r\n                        display: isDisplayY,\r\n                        grid: {\r\n                            display: true\r\n                        },\r\n                    }\r\n                },\r\n                elements: {\r\n                    point: {\r\n                        radius: 1,\r\n                        pointStyle: 'line',\r\n                        rotation: 100,\r\n                        hitRadius: 4,\r\n                        borderWidth: 0,\r\n                        hoverRadius: 10,\r\n                        hoverBorderWidth: 5\r\n                    },\r\n                    line: {\r\n                        tension: 0,\r\n                        borderWidth: 2,\r\n                        borderColor: '#4fc180',\r\n                        borderDashOffset: 0\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return <div className={classes.chartWrap}>\r\n        <canvas id={id}></canvas>\r\n    </div>\r\n}\r\n\r\nexport default ChartComponent","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PopUpCoinDescription_container__8c2s6\",\"cardWrap\":\"PopUpCoinDescription_cardWrap__ylrvy\",\"rank\":\"PopUpCoinDescription_rank__Ljj65\",\"symbol\":\"PopUpCoinDescription_symbol__6Onrc\",\"price\":\"PopUpCoinDescription_price__ep5QB\",\"titleWrap\":\"PopUpCoinDescription_titleWrap__HZ+eq\",\"flexWrap\":\"PopUpCoinDescription_flexWrap__Ztlk-\",\"formInternalContainer\":\"PopUpCoinDescription_formInternalContainer__JLU4z\",\"totalPriceWrap\":\"PopUpCoinDescription_totalPriceWrap__B-48+\",\"totalPriceTitle\":\"PopUpCoinDescription_totalPriceTitle__80hOM\",\"totalPrice\":\"PopUpCoinDescription_totalPrice__7IvIB\",\"changePercent\":\"PopUpCoinDescription_changePercent__J6tc2\",\"internalTitle\":\"PopUpCoinDescription_internalTitle__9To4g\",\"supply\":\"PopUpCoinDescription_supply__66ntH\",\"alignLeft\":\"PopUpCoinDescription_alignLeft__o5oMX\",\"chartWrap\":\"PopUpCoinDescription_chartWrap__JwBPp\",\"btnWrap\":\"PopUpCoinDescription_btnWrap__QMvvy\",\"twoBtnsWrap\":\"PopUpCoinDescription_twoBtnsWrap__i2buf\",\"btn\":\"PopUpCoinDescription_btn__QELwU\",\"smallBtn\":\"PopUpCoinDescription_smallBtn__pKgEu\"};","// extracted by mini-css-extract-plugin\nexport default {\"containerInputNumber\":\"FormsControls_containerInputNumber__Pcyiu\",\"minus\":\"FormsControls_minus__A-TPu\",\"plus\":\"FormsControls_plus__1AMmh\",\"inputNumber\":\"FormsControls_inputNumber__hMkWH\",\"btn\":\"FormsControls_btn__QAN0S\",\"btnRed\":\"FormsControls_btnRed__9Fxpy\",\"btnGreen\":\"FormsControls_btnGreen__7OJzX\"};","import React from \"react\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport {InputNumberSchema} from \"../../utils/Validators/Validators\";\r\nimport classes from './FormsControls.module.css'\r\nimport classNames from \"classnames\";\r\n\r\ntype PropsTypeInputNumber = {\r\n    name: string,\r\n    setValue: (value: any) => void,\r\n    value: any,\r\n    increment: () => void,\r\n    decrement: () => void,\r\n    placeholder: string\r\n}\r\n\r\ntype PropsTypeButton = {\r\n    type: \"button\" | \"reset\" | \"submit\" | undefined,\r\n    text: string,\r\n    redColor? : boolean,\r\n    onClick?: (args: any) => void\r\n    onClickValue? : any\r\n}\r\n\r\nexport const InputNumber:React.FC<PropsTypeInputNumber> = ({name,setValue, value, increment, decrement, placeholder}) => {\r\n\r\n    return <div className={classes.containerInputNumber}>\r\n        <div className={classes.minus} onClick={decrement}><p>-</p></div>\r\n        <input className={classes.inputNumber}\r\n               name={name}\r\n               value={value}\r\n               onChange={setValue}\r\n               type=\"text\"\r\n               pattern=\"^[0-9]+(.[0-9]+)?$\"\r\n               placeholder={placeholder}\r\n               required/>\r\n        <div className={classes.plus} onClick={increment}><p>+</p></div>\r\n    </div>\r\n}\r\n\r\nexport const Button: React.FC<PropsTypeButton> = ({type,\r\n                                                      text,\r\n                                                      redColor,\r\n                                                      onClick,\r\n                                                      onClickValue}) => {\r\n\r\n    return <div>\r\n        <button type={type}\r\n                onClick={() => onClick ? onClick(onClickValue ? onClickValue : null) : null}\r\n                className={classNames(classes.btn, redColor ? classes.btnRed : classes.btnGreen)}\r\n        >{text}</button>\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport classes from './PopUp.module.css'\r\nimport classNames from \"classnames\";\r\nimport {Button} from \"../FormsControls/FormsControls\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\ntype PropsTypes = {\r\n    active: boolean,\r\n    setActive: (set: boolean) => void,\r\n    text: string,\r\n    setAnswer: (b: boolean) => void,\r\n}\r\n\r\nconst PopUpYesNo: React.FC<PropsTypes> = ({active, setActive, text, setAnswer}) => {\r\n\r\n\r\n    const onClick = (answer: boolean) => {\r\n        setAnswer(answer)\r\n        setActive(false)\r\n    }\r\n\r\n    return createPortal(<div className={active ?\r\n            classNames(classes.popUp, classes.active) :\r\n            classes.popUp}>\r\n            <div className={active ?\r\n                classNames(classes.popUpContent, classes.active) :\r\n                classes.popUpContent}\r\n                 onClick={e => e.stopPropagation()}>\r\n                <div className={classes.textWrap}>\r\n                    {text}\r\n                </div>\r\n                    <div className={classes.flexSpace}>\r\n                        <div className={classes.buttonWrap}>\r\n                            <Button type={\"button\"} text=\"YES\" redColor={false} onClick={onClick} onClickValue={true}/>\r\n                        </div>\r\n                        <div className={classes.buttonWrap}>\r\n                            <Button type={\"button\"} text=\"NO\" redColor={true} onClick={onClick} onClickValue={false}/>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>,\r\n        document.body\r\n    )\r\n}\r\n\r\n\r\nexport default PopUpYesNo","import React, {FormEvent, useEffect, useRef, useState} from \"react\"\r\nimport classes from './PopUpCoinDescription.module.css'\r\nimport {AssetsType} from \"../../api/types-api\";\r\nimport {formatPercents, formatPrice} from \"../CoinElement/CoinElement\";\r\nimport classNames from \"classnames\";\r\nimport {Button, InputNumber} from \"../common/FormsControls/FormsControls\";\r\nimport {FavouriteType} from \"../Assets/Assets\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfile} from \"../../selectors/profile-selectors\";\r\nimport {addCoinToPortfolio, CoinInPortfolioType, removeCoinFromPortfolio} from \"../../redux/profile-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PopUpYesNo from \"../common/PopUp/PopUpYesNo\";\r\n\r\ntype PropsTypes = {\r\n    coin: AssetsType,\r\n    setIsPopUpActive: (b: boolean) => void\r\n    isAlreadyExistCoin: boolean,\r\n    needRedirect?: boolean\r\n}\r\n\r\nconst PopUpCoinDescription: React.FC<PropsTypes> = ({\r\n                                                        coin,\r\n                                                        setIsPopUpActive,\r\n                                                        isAlreadyExistCoin,\r\n                                                        needRedirect\r\n                                                    }) => {\r\n\r\n    const [quantityCoin, setQuantityCoin] = useState<string>('0')\r\n    const [totalPrice, setTotalPrice] = useState<string>('0')\r\n    const [isAppend, setIsAppend] = useState<boolean>(true)\r\n    const portfolio = useSelector(getProfile).portfolio\r\n    const idx = portfolio.findIndex(existing => existing.coin.id === coin.id)\r\n    const [popUpYesNoActive, setPopUpYesNoAction] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const changeTotalPrice = (quantity: number) => {\r\n        const tP: number = coin.priceUsd * +quantity\r\n        const maxValue = Math.pow(10, 12)\r\n        if (tP > maxValue) {\r\n            setTotalPrice(String(maxValue - 1))\r\n        } else {\r\n            setTotalPrice(String(tP))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const popUpAnswer = (answer: boolean) => {\r\n\r\n        if (!answer) {\r\n            setIsPopUpActive(true)\r\n            return\r\n        }\r\n\r\n        if (isAppend) {\r\n            dispatch(addCoinToPortfolio(coin, +quantityCoin))\r\n        } else {\r\n            dispatch(removeCoinFromPortfolio(coin, +quantityCoin))\r\n        }\r\n        setQuantityCoin('0')\r\n        setTotalPrice('0')\r\n    }\r\n\r\n\r\n\r\n    const convertQuantity = (quantity: number) => {\r\n        const max = Math.pow(10, 9)\r\n        return quantity > max ? max - 1 : quantity\r\n    }\r\n\r\n\r\n    const incrementQuantityCoin = () => {\r\n        const incr = +quantityCoin + 1\r\n        changeTotalPrice(incr)\r\n        setQuantityCoin(String(incr))\r\n    }\r\n\r\n\r\n    const decrementQuantityCoin = () => {\r\n        if (+quantityCoin > 0) {\r\n            const decr = +quantityCoin - 1\r\n            changeTotalPrice(decr)\r\n            setQuantityCoin(String(decr))\r\n        }\r\n    }\r\n\r\n\r\n    const showExistQuantity = () => {\r\n        return portfolio[idx] ? `${formatPercents(convertQuantity(portfolio[idx].quantity), 8)} ${portfolio[idx].coin.symbol}` : ''\r\n    }\r\n\r\n    const showQuantity = () => {\r\n        return `${formatPercents(convertQuantity(+quantityCoin), 8)} ${coin.symbol}`\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const quantity = event.target.value\r\n        setQuantityCoin(quantity)\r\n        changeTotalPrice(+quantity)\r\n    }\r\n\r\n    const onClick = (isAdd: boolean) => {\r\n        if (+quantityCoin <= 0) {\r\n            return\r\n        }\r\n        setIsPopUpActive(false)\r\n        setIsAppend(isAdd)\r\n        setPopUpYesNoAction(true)\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        onClick(true)\r\n    }\r\n\r\n\r\n    return <div className={classes.container}>\r\n        <div className={classes.cardWrap}>\r\n            <div className={classes.titleWrap}>\r\n                <span className={classes.symbol}>\r\n                    {needRedirect\r\n                        ?\r\n                        <Link to={`/${coin.id}`}>{coin.symbol}</Link>\r\n                        :\r\n                        coin.symbol\r\n                    }\r\n\r\n                </span>\r\n                <span className={classes.rank}>RANK #{coin.rank}</span>\r\n                <span className={classes.price}>{formatPrice(coin.priceUsd)}</span>\r\n            </div>\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>24h%:</p>\r\n                <span className={classes.supply}>{formatPercents(coin.changePercent24Hr)}%</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Circulating Supply:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.supply, 12, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Market cap:</p>\r\n                <span className={classes.supply}>{formatPrice(coin.marketCapUsd, 12, 0)}</span>\r\n            </div>\r\n\r\n            <div className={classes.flexWrap}>\r\n                <p className={classNames(classes.internalTitle, classes.supply)}>Volume(24h):</p>\r\n                <span className={classes.supply}>{formatPrice(coin.volumeUsd24Hr, 12, 0)}</span>\r\n            </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div className={classes.formInternalContainer}>\r\n\r\n                <InputNumber name=\"quantitySigns\"\r\n                             value={quantityCoin}\r\n                             increment={incrementQuantityCoin}\r\n                             decrement={decrementQuantityCoin}\r\n                             setValue={handleChange}\r\n                             placeholder={coin.symbol}/>\r\n\r\n                <div className={classes.totalPriceWrap}>\r\n                    <p className={classes.totalPriceTitle}>Total:</p>\r\n                    <p className={classes.totalPrice}>{formatPrice(+totalPrice, 10, 2)}\r\n                    </p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {isAlreadyExistCoin ?\r\n                <div className={classes.totalPriceWrap}>\r\n                    <p className={classes.totalPriceTitle}>Own:</p>\r\n                    <p className={classes.totalPrice}>\r\n                        {showExistQuantity()}\r\n                    </p>\r\n                </div>\r\n                : null\r\n            }\r\n            <div className={classNames(classes.btnWrap, isAlreadyExistCoin ? classes.twoBtnsWrap : null)}>\r\n                <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n\r\n                    <Button type={\"submit\"} redColor={false} onClick={() => onClick(true)}\r\n                            text={isAlreadyExistCoin ? \"BUY\" : \"ADD TO PORTFOLIO\"}/>\r\n\r\n                </div>\r\n                {isAlreadyExistCoin ?\r\n                    <div className={classNames(isAlreadyExistCoin ? classes.smallBtn : classes.btn)}>\r\n\r\n                        <Button type={\"button\"} text={\"SELL\"} onClick={() => onClick(false)} redColor={true}/>\r\n\r\n                    </div> :\r\n                    null}\r\n            </div>\r\n        </form>\r\n\r\n        <PopUpYesNo active={popUpYesNoActive}\r\n                    setActive={setPopUpYesNoAction}\r\n                    text={\r\n            `Are you sure you want to ${isAppend ? 'buy' : 'sell'} ${showQuantity()} (${formatPrice(+totalPrice, 10, 2)}) ${coin.name}?`\r\n                    }\r\n                    setAnswer={popUpAnswer}\r\n        />\r\n\r\n    </div>\r\n}\r\n\r\nexport default PopUpCoinDescription","// extracted by mini-css-extract-plugin\nexport default {\"preloader\":\"LittlePreloader_preloader__77oRV\",\"preloaderImg\":\"LittlePreloader_preloaderImg__XOq80\"};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/littlePreloader.gif\"\r\nimport classes from \"./LittlePreloader.module.css\"\r\n\r\nconst LittlePreloader: React.FC = () => {\r\n    return <div className={classes.preloader}>\r\n        <img className={classes.preloaderImg} src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default LittlePreloader\r\n","import React from \"react\";\r\nimport classes from './PopUp.module.css'\r\nimport classNames from \"classnames\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\ntype PropsTypes = {\r\n    active: boolean,\r\n    setActive: (set: boolean) => void,\r\n    children: React.FC | React.DetailedHTMLProps<any, any>\r\n}\r\n\r\nconst PopUp: React.FC<PropsTypes> = ({active, setActive, children}) => {\r\n\r\n    return createPortal(<div className={active ?\r\n            classNames(classes.popUp, classes.active) :\r\n            classes.popUp} onClick={() => setActive(false)}>\r\n\r\n            <div className={active ?\r\n                classNames(classes.popUpContent, classes.active) :\r\n                classes.popUpContent}\r\n                 onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>,\r\n        document.body\r\n    )\r\n}\r\n\r\n\r\nexport default PopUp","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Main_heading__TWO6Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Card_container__reV-6\",\"cardWrap\":\"Card_cardWrap__ZQ7sW\",\"rank\":\"Card_rank__HoZfQ\",\"symbol\":\"Card_symbol__+NoaV\",\"titleWrap\":\"Card_titleWrap__Lu67E\",\"flexWrap\":\"Card_flexWrap__CJtBJ\",\"price\":\"Card_price__-s-41\",\"changePercent\":\"Card_changePercent__jDyNR\",\"internalTitle\":\"Card_internalTitle__uUdkZ\",\"internal\":\"Card_internal__4cKOF\",\"chartWrap\":\"Card_chartWrap__lZUnW\"};","import React, {useEffect, useState} from \"react\";\r\nimport {AssetsHistoryType, AssetsType} from \"../../api/types-api\";\r\nimport classes from './Card.module.css'\r\nimport {formatPercents, formatPrice} from \"../CoinElement/CoinElement\";\r\nimport LittlePreloader from \"../common/LittlePreloader/LittlePreloader\";\r\nimport ChartComponent from \"../ChartComponent/ChartComponent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAssetsHistory, getIsFetchingAssetsPage} from \"../../selectors/assets-selectors\";\r\nimport {getIsFetching} from \"../../selectors/app-selectors\";\r\nimport {AssetsTop3Type, setAssetByID, setAssetsHistoryById, setAssetsTop3} from \"../../redux/assets-reducer\";\r\nimport {IntervalEnum} from \"../../api/assets-api\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Card: React.FC<{ coinData: AssetsType, coinHistory: Array<AssetsHistoryType>}> = React.memo (({coinData, coinHistory}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const onClick = (id: string) => {\r\n        dispatch(setAssetByID(id))\r\n        navigate(`/:id=${id}`)\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n        <div className={classes.cardWrap}>\r\n            <div className={classes.titleWrap}>\r\n                <span className={classes.symbol} onClick={() => onClick(coinData.id)}>{coinData.symbol}</span>\r\n                <span className={classes.rank}>RANK #{coinData.rank}</span>\r\n            </div>\r\n            <div className={classes.flexWrap}>\r\n                <div className={classes.flexWrap}>\r\n                    <p className={classes.internalTitle}>PRICE:</p>\r\n                    <span className={classes.price}>{formatPrice(coinData.priceUsd)}</span>\r\n                </div>\r\n                <div className={classes.flexWrap}>\r\n                    <p className={classes.internalTitle}>24h%:</p>\r\n                    <span className={classes.changePercent}>{formatPercents(coinData.changePercent24Hr)}%</span>\r\n                </div>\r\n            </div>\r\n            <div className={classes.chartWrap}>\r\n                <ChartComponent key={coinData.id} assetHistory={coinHistory} id={coinData.id} isDisplayX={false} isDisplayY={false}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\nexport default Card","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Paginator_container__j7UmC\",\"paginatorWrap\":\"Paginator_paginatorWrap__l8IEs\",\"pageNumberWrap\":\"Paginator_pageNumberWrap__myguf\",\"selectedPage\":\"Paginator_selectedPage__Hoy0+\",\"pageNumber\":\"Paginator_pageNumber__8v9-1\",\"navigationElement\":\"Paginator_navigationElement__dS20i\"};","import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\"\r\nimport classNames from \"classnames\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = ({\r\n                                            totalItemsCount,\r\n                                            pageSize,\r\n                                            currentPage = 1,\r\n                                            onPageChanged = x => x,\r\n                                            portionSize = 5\r\n                                        }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages: Array<number> = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const onClickPage = (pageNum: number) => {\r\n        onPageChanged(pageNum)\r\n    }\r\n\r\n    const onClickBtn = (portion: number) => {\r\n        setPortionNumber(portion)\r\n    }\r\n\r\n    return <div className={classes.container}>\r\n        <ul className={classes.paginatorWrap}>\r\n            {portionNumber > 1 &&\r\n                <div className={classes.navigationElement}>\r\n                    <p onClick={() => onClickBtn(portionNumber - 1)}>&#11013;</p>\r\n                </div>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <div key={p} className={classes.pageNumberWrap} onClick={() => onClickPage(p)}>\r\n                        <Link to={`/coins/:page=${p}`}\r\n                              className={classNames({\r\n                                  [classes.selectedPage]: currentPage === p\r\n                              }, classes.pageNumber)}\r\n                              key={p}> {p} </Link>\r\n                    </div>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n                <div className={classes.navigationElement}>\r\n                    <p onClick={() => onClickBtn(portionNumber + 1)}>&#10145;</p>\r\n                </div>\r\n            }\r\n\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Paginator\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (offset: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n\r\n// -===========================================================================\r\n\r\n/*\r\n* import React, {useState} from \"react\";\r\nimport classes from \"./Paginator.module.css\"\r\nimport classNames from \"classnames\"\r\n\r\n\r\nconst Paginator: React.FC<PropsType> = ({\r\n                                            totalItemsCount,\r\n                                            pageSize,\r\n                                            currentPage = 1,\r\n                                            onPageChanged = x => x,\r\n                                            portionSize = 5\r\n                                        }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages: Array<number> = []\r\n    for (let i = 1; i < pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(currentPage)\r\n    const leftPortionPageNumber = currentPage <= 0 ? 1 : currentPage - Math.floor(portionSize / 2)\r\n    const rightPortionPageNumber = currentPage >= pagesCount ? pagesCount : currentPage + Math.floor(portionSize / 2)\r\n    // const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    // const rightPortionPageNumber = portionNumber * portionSize\r\n    console.log(leftPortionPageNumber, rightPortionPageNumber)\r\n    console.log(`c: ${portionCount}\\nn: ${portionNumber}`)\r\n    // const isRightPlace = (index: number, left: number, right: number): boolean => {\r\n    //     console.log(index >= left && index <= right && right >= currentPage)\r\n    //     return index >= left && index <= right && right >= currentPage\r\n    // }\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - portionSize)\r\n                }}>PREV</button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={classNames({\r\n                            [classes.selectedPage]: currentPage === p\r\n                        }, classes.pageNumber)}\r\n                              key={p} onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }\r\n                        }> {p} </span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + portionSize)\r\n                }}>NEXT</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator\r\n\r\n// =====================================================================================================================\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (offset: number) => void\r\n    portionSize?: number\r\n}\r\n*\r\n*\r\n* */","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCurrentPage, getLastRank, getLimit} from \"../../selectors/app-selectors\";\r\nimport {Assets} from \"../../components/Assets/Assets\";\r\nimport classes from './Main.module.css'\r\nimport Card from \"../../components/Card/Card\";\r\nimport {getIsFetchingAssetsPage, getTop3Assets} from \"../../selectors/assets-selectors\";\r\nimport Paginator from \"../../components/Paginator/Paginator\";\r\nimport {setAppCurrentPage} from \"../../redux/app-reducer\";\r\nimport {setAssets} from \"../../redux/assets-reducer\";\r\nimport LittlePreloader from \"../../components/common/LittlePreloader/LittlePreloader\";\r\nimport Preloader from \"../../components/common/Preloader/Preloader\";\r\n\r\nconst MainPage: React.FC = (props) => {\r\n\r\n    const top3Assets = useSelector(getTop3Assets)\r\n    const lastRank = useSelector(getLastRank)\r\n    const limit = useSelector(getLimit)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const isFetching = useSelector(getIsFetchingAssetsPage)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(setAppCurrentPage(page))\r\n        dispatch(setAssets((page) * limit - limit, limit))\r\n    }\r\n\r\n    return <>\r\n        {isFetching? <LittlePreloader/> : <div className={classes.heading}>\r\n            {top3Assets.data.map(coin => <Card key={coin.id} coinData={coin.data} coinHistory={coin.history}/>)}\r\n        </div>\r\n        }\r\n        <Paginator totalItemsCount={lastRank} currentPage={currentPage} pageSize={limit}\r\n                   onPageChanged={onPageChanged}/>\r\n        <Assets/>\r\n        <Paginator totalItemsCount={lastRank} currentPage={currentPage} pageSize={limit}\r\n                   onPageChanged={onPageChanged}/>\r\n    </>\r\n}\r\n\r\nexport default MainPage","import {AppStateType} from \"../redux/redux-store\";\r\nimport {AssetsHistoryType, AssetsMarket, AssetsType} from \"../api/types-api\";\r\nimport {AssetsTop3Type} from \"../redux/assets-reducer\";\r\n\r\nexport const getAssets = (state: AppStateType):Array<AssetsType> => state.assets.assets.data\r\nexport const getAsset = (state: AppStateType): AssetsType => state.assets.assetsById.data\r\nexport const getAssetsHistory = (state: AppStateType): Array<AssetsHistoryType> => state.assets.assetsHistoryById.data\r\nexport const getAssetsMarkets = (state: AppStateType): Array<AssetsMarket> => state.assets.assetsMarketsById.data\r\nexport const getTop3Assets = (state: AppStateType): AssetsTop3Type => state.assets.assetsTop3\r\nexport const getIsFetchingAssetsPage = (state: AppStateType): boolean => state.assets.isFetchingAssetPage","// extracted by mini-css-extract-plugin\nexport default {\"popUp\":\"PopUp_popUp__DYGKi\",\"active\":\"PopUp_active__X+uTu\",\"popUpContent\":\"PopUp_popUpContent__L0hSX\",\"textWrap\":\"PopUp_textWrap__wYzCa\",\"flexSpace\":\"PopUp_flexSpace__fvRQl\",\"buttonWrap\":\"PopUp_buttonWrap__8Pv1d\"};"],"names":["getValueFromParams","params","split","Assets","portfolio","useSelector","getProfile","assets","getAssets","limit","getLimit","currentPage","getCurrentPage","dispatch","useDispatch","useParams","page","state","JSON","parse","localStorage","getItem","keys","useState","favourites","isPopUpActive","setIsPopUpActive","selectedCoin","setSelectedCoin","isAlreadyExistCoin","setIsAlreadyExistCoin","pageFromParams","alreadyInFavourite","coinId","some","f","coin","id","useEffect","setItem","stringify","setAppCurrentPage","setAssets","className","classes","map","CoinElement","PopUp","active","setActive","PopUpCoinDescription","assetHistory","borderWidth","isDisplayX","isDisplayY","borderColor","Chart","LineController","LineElement","PointElement","LinearScale","Title","chartExist","undefined","destroy","type","data","labels","a","date","time","Intl","DateTimeFormat","day","month","year","hour","minute","second","format","datasets","label","priceUsd","options","responsive","plugins","legend","display","scales","x","grid","y","elements","point","radius","pointStyle","rotation","hitRadius","hoverRadius","hoverBorderWidth","line","tension","borderDashOffset","InputNumber","name","setValue","value","increment","decrement","placeholder","onClick","onChange","pattern","required","Button","text","redColor","onClickValue","classNames","setAnswer","answer","createPortal","e","stopPropagation","document","body","needRedirect","quantityCoin","setQuantityCoin","totalPrice","setTotalPrice","isAppend","setIsAppend","idx","findIndex","existing","popUpYesNoActive","setPopUpYesNoAction","changeTotalPrice","quantity","tP","maxValue","Math","pow","String","convertQuantity","max","isAdd","to","symbol","rank","formatPrice","formatPercents","changePercent24Hr","supply","marketCapUsd","volumeUsd24Hr","onSubmit","event","preventDefault","incr","decr","target","addCoinToPortfolio","removeCoinFromPortfolio","src","preloader","alt","children","React","coinData","coinHistory","navigate","useNavigate","setAssetByID","ChartComponent","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClickBtn","portion","filter","p","props","top3Assets","getTop3Assets","lastRank","getLastRank","isFetching","getIsFetchingAssetsPage","LittlePreloader","history","getAsset","assetsById","getAssetsHistory","assetsHistoryById","assetsTop3","isFetchingAssetPage"],"sourceRoot":""}